// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  avatarUrl   String?  @db.VarChar(500) // URL da imagem de avatar, pode ser nulo e longa
  avatarColor String   // Cor aleatória padrão
  favorites   Favorite[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  placeId   Int      // ID do ponto turístico favoritado
  createdAt DateTime @default(now())
  @@unique([userId, placeId])
}

model TouristSpot {
  id          Int      @id @default(autoincrement())
  name        String   // Nome obrigatório
  description String   // Descrição obrigatória
  images      TouristSpotImage[] // Relação com imagens
  city        City     // Cidade (enum)
  type        SpotType // Tipo de ponto (enum)
  canFavorite Boolean  @default(true) // Pode ser favoritado
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TouristSpotImage {
  id            Int         @id @default(autoincrement())
  url           String     // URL da imagem
  touristSpot   TouristSpot @relation(fields: [touristSpotId], references: [id])
  touristSpotId Int
}

model Restaurant {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  images      RestaurantImage[]
  city        City
  address     String
  phone       String?
  website     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RestaurantImage {
  id              Int         @id @default(autoincrement())
  url             String
  restaurant      Restaurant  @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  restaurantId    Int
}

enum City {
  CARAGUATATUBA
  UBATUBA
  SAO_SEBASTIAO
  ILHABELA
}

enum SpotType {
  PRAIA
  URBANO
  NATUREZA
}
